{"version":3,"sources":["components/navbar.jsx","components/gainers.jsx","components/home.jsx","components/about.jsx","components/news.jsx","components/search.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","Fragment","className","href","react_router_dom","to","Component","TOKEN","concat","process","Gainers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","isLoaded","isFlipped","api","updated","refreshAPI","bind","assertThisInitialized","handleClick","_this2","fetch","then","res","json","setState","event","preventDefault","prevState","_React$createElement","_this3","_this$state","defineProperty","styles","container","card","root","map","item","Card","react_card_flip_default","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","key","symbol","CardBody","CardHeader","latestPrice","toFixed","change","changePercent","high","low","companyName","Intl","NumberFormat","format","latestVolume","avgTotalVolume","marketCap","peRatio","Button","onClick","button","Home","setGainers","evt","otherFunction","setLosers","showComponent","onButtonClick","type","class","buttons","gainers","About","News","articles","isNewsLoaded","results","data","article","title","src","image_url","date","text","news_url","target","source_name","BASEURL","Search","getInfo","query","toString","JSON","stringify","toJSON","parse","handleInputChange","search","value","length","placeholder","ref","input","onChange","App","navbar","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.664e8f48.chunk.js","sourcesContent":["/** \n Navbar component\n Uses react-router-dom to link various components\n */\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Route, NavLink } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-light navbar-expand-lg  bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">\n            4900 Project\n          </a>\n\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">\n                  <NavLink to=\"/\">Home</NavLink>\n                </a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">\n                  <NavLink to=\"/News\">News</NavLink>\n                </a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">\n                  <NavLink to=\"/Search\">Search</NavLink>\n                </a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">\n                  <NavLink to=\"/About\">About</NavLink>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","/** \n Gainers component \n *should really be called card component*\n API provided by IEXCloud\n This component retrieves data from API and organizes data into a card format.\n Card has a front and back and each card has a button that flips all cards. \n Known Issues:\n App crashes when toFixed() of null\n App needs to refresh twice to update data. \n To do:\n Make app update once a market is clicked on without having to refresh\n */\n\nimport React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport styles from \"../index.css\";\nimport { Card, CardBody, Button, CardHeader } from \"reactstrap\";\n\nconst BASEURL = \"https://cloud.iexapis.com/v1/stock/market/list/\";\nconst TOKEN = `${process.env.REACT_APP_IEX_KEY}`;\n\nclass Gainers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      isFlipped: false,\n      api: this.props.api,\n      updated: true\n    };\n    this.refreshAPI = this.refreshAPI.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + this.props.api + \"?token=\" + TOKEN)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  }\n\n  refreshAPI() {\n    this.setState(state => ({ updated: !state.updated }));\n  }\n\n  componentWillReceiveProps(props) {\n    const { api } = this.props;\n    if (props.api !== api) {\n      this.refreshAPI();\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  }\n\n  render() {\n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <React.Fragment>\n          <main\n            className=\"container\"\n            className={styles.container}\n            className={styles.card}\n            className={styles.root}\n          >\n            <div>\n              {items.map(item => (\n                <Card>\n                  <ReactCardFlip\n                    isFlipped={this.state.isFlipped}\n                    flipDirection=\"vertical\"\n                    flipSpeedBackToFront={1}\n                    flipSpeedFrontToBack={1}\n                  >\n                    <div key=\"front\">\n                      <div key={item.symbol}>\n                        <CardBody>\n                          <CardHeader>{item.symbol}</CardHeader>\n                          Latest Price:{\" \"}\n                          {item.latestPrice == null\n                            ? \"N/A\"\n                            : \"$\" + item.latestPrice.toFixed(2)}\n                          <br />\n                          Change:{\" \"}\n                          {item.change == null\n                            ? \"N/A\"\n                            : \"$\" + item.change.toFixed(2)}\n                          <br />% Change:{\" \"}\n                          {item.changePercent == null\n                            ? \"N/A\"\n                            : (item.changePercent * 100).toFixed(2)}\n                          %\n                          <br />\n                          High:{\" \"}\n                          {item.high == null\n                            ? \"N/A\"\n                            : \"$\" + item.high.toFixed(2)}{\" \"}\n                          <br /> Low:{\" \"}\n                          {item.low == null ? \"N/A\" : \"$\" + item.low.toFixed(2)}\n                          <br />\n                        </CardBody>\n                      </div>\n                    </div>\n\n                    <div key=\"back\">\n                      <div key={item.symbol}>\n                        <CardBody>\n                          <CardHeader>{item.companyName}</CardHeader>\n                          Volume:{\" \"}\n                          {new Intl.NumberFormat().format(item.latestVolume)}\n                          <br />\n                          Avg Vol:{\" \"}\n                          {new Intl.NumberFormat().format(item.avgTotalVolume)}\n                          <br />\n                          Market Cap:{\" \"}\n                          {new Intl.NumberFormat().format(item.marketCap)}\n                          <br />\n                          PE Ratio:{\" \"}\n                          {item.peRatio == null ? \"N/A\" : item.peRatio}\n                        </CardBody>\n                      </div>\n                    </div>\n                  </ReactCardFlip>\n                  <Button onClick={this.handleClick} className={styles.button}>\n                    More Info...\n                  </Button>\n                </Card>\n              ))}\n            </div>\n          </main>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Gainers;\n","/**\r\n \r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport Gainers from \"./gainers\";\r\nimport styles from \"../index.css\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showComponent: true,\r\n      api: \"\"\r\n    };\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.setGainers = this.setGainers.bind(this);\r\n    this.setLosers = this.setLosers.bind(this);\r\n  }\r\n\r\n  onButtonClick() {\r\n    this.setState(state => ({\r\n      showComponent: !state.showComponent\r\n    }));\r\n  }\r\n\r\n  setGainers = evt => {\r\n    this.setState({ api: \"gainers\" }, this.otherFunction);\r\n  };\r\n\r\n  setLosers = evt => {\r\n    this.setState({ api: \"losers\" }, this.otherFunction);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main>\r\n          <div className=\"col text-center\">\r\n            Choose a market, then double click refresh.\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={this.setGainers}\r\n            >\r\n              Gainers\r\n            </button>\r\n            {\"                                                 \"}\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              onClick={this.setLosers}\r\n            >\r\n              Losers\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <button onClick={this.onButtonClick} className={styles.buttons}>\r\n              Refresh\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {this.state.showComponent ? <Gainers {...this.state} /> : null}\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/**\n About Component\n\n */\nimport React, { Component } from \"react\";\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"col text-center\">\n        <h1>About</h1>\n\n        <h2>Hi, my name is Victor Nestor</h2>\n        <body className=\"col text-center\">\n          I am a recent graduate from Brooklyn College, and this is my senior\n          project for my 4900 class. <br />I chose to make a simple stock market\n          application, but didn't know where to begin. After extensive research,{\" \"}\n          <br />I chose to build a web application using\n          <a href=\"https://reactjs.org/\"> React</a>. I started this project\n          knowing nothing about React and some Javascript, <br /> but I quickly\n          learned the React library had everything I needed to achieve what I\n          wanted to do. I wanted <br /> to create a simple web app that can be\n          used to quickly retrieve financial data a person would be interested\n          in.\n          <br /> I have learned a lot, learning more about React, Javascript,\n          and the resources and tools available.\n          <br />\n          <br />\n          <h3>Tools and Resources</h3>\n          <ul className=\"col text-left\">\n            <li>\n              <a href=\"https://iexcloud.io/\">IEX Cloud API</a> - Provided stock\n              market data.\n            </li>\n            <li>\n              <a href=\"https://stocknewsapi.com/\">Stock News API</a> - Provided\n              stock market news.\n            </li>\n            <li>\n              <a href=\"https://www.getpostman.com/\">Postman</a> - API\n              development tool used to manage APIs and display data from API\n              calls.\n            </li>\n            <li>\n              <a href=\"https://getbootstrap.com/\">Bootstrap</a> - Open source\n              development toolkit for developing with HTML, CSS, and JS.\n            </li>\n            <li>\n              <a href=\"https://github.com/\">GitHub</a> - Code hosting platform.\n              Used GitHub as a repository and also kept track of progress being\n              made to application when updated.\n            </li>\n          </ul>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","/**\n News Component\n API provided by Stock News API\n This component retrieves data from Stock News and displays\n it in an esy to read format. \n */\n\nimport React, { Component } from \"react\";\n\nconst TOKEN = `${process.env.REACT_APP_STOCKNEWS_KEY}`;\nconst BASEURL =\n  \"https://stocknewsapi.com/api/v1/category?section=general&items=50&token=\";\n\nclass News extends Component {\n  constructor() {\n    super();\n    this.state = {\n      articles: [],\n      isNewsLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + TOKEN)\n      .then(results => results.json())\n      .then(json => {\n        this.setState({\n          isNewsLoaded: true,\n          articles: json\n        });\n      });\n  }\n\n  render() {\n    var { isNewsLoaded, articles } = this.state;\n\n    if (!isNewsLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <React.Fragment>\n          <main>\n            <div className=\"row\" className=\"col text-center\">\n              <h1>News</h1>\n              {articles.data.map(article => (\n                <div className=\"leftcolumn\">\n                  <div className=\"box\" key={article.title}>\n                    <img src={article.image_url} />\n                    <h2>{article.title}</h2>\n                    <h5>{article.date}</h5>\n                    <p>\n                      {article.text}..\n                      <a href={article.news_url} target=\"_blank\">\n                        Read More\n                      </a>\n                    </p>\n                    Source: {article.source_name}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </main>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default News;\n","/** \r\n Search Component\r\n Query updates as stock is being typed, \r\n displays card when stock symbol match is found.\r\n Known Issues:\r\n -toFixed() of null crashes app when no data available\r\n -404 error in console*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport styles from \"../index.css\";\r\nimport { Card, CardBody, Button, CardHeader } from \"reactstrap\";\r\n\r\nconst BASEURL = \"https://cloud.iexapis.com/v1/stock/\";\r\nconst TOKEN = `${process.env.REACT_APP_IEX_KEY}`;\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      results: [],\r\n      isFlipped: false,\r\n      isLoaded: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  getInfo = () => {\r\n    fetch(BASEURL + `${this.state.query}` + \"/quote?token=\" + TOKEN)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        let toString = \"[\" + JSON.stringify(json) + \"]\";\r\n        let toJSON = JSON.parse(toString);\r\n        this.setState({\r\n          results: toJSON,\r\n          isLoaded: true\r\n        });\r\n      });\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState(\r\n      {\r\n        query: this.search.value\r\n      },\r\n      () => {\r\n        if (this.state.query && this.state.query.length >= 1) {\r\n          this.getInfo();\r\n        } else if (!this.state.query) {\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClick(event) {\r\n    event.preventDefault();\r\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\r\n  }\r\n\r\n  render() {\r\n    var { results, isLoaded } = this.state;\r\n    if (isLoaded) {\r\n      return (\r\n        <React.Fragment>\r\n          <form className=\"col text-center\">\r\n            <input\r\n              placeholder=\"Enter a stock symbol:\"\r\n              ref={input => (this.search = input)}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </form>\r\n          <div className=\"col text-center\">\r\n            e.g., Apple = aapl ; Tesla = tsla{\" \"}\r\n          </div>\r\n          <main\r\n            className=\"container\"\r\n            className={styles.container}\r\n            className={styles.card}\r\n            className={styles.root}\r\n            className=\"col text-center\"\r\n          >\r\n            <div>\r\n              {results.map(item => (\r\n                <Card>\r\n                  <ReactCardFlip\r\n                    isFlipped={this.state.isFlipped}\r\n                    flipDirection=\"vertical\"\r\n                    flipSpeedBackToFront={1}\r\n                    flipSpeedFrontToBack={1}\r\n                  >\r\n                    <div key=\"front\">\r\n                      <div key={item.symbol}>\r\n                        <CardBody>\r\n                          <CardHeader>{item.symbol}</CardHeader>\r\n                          Latest Price: ${item.latestPrice.toFixed(2)}\r\n                          <br />\r\n                          Change: ${item.change.toFixed(2)}\r\n                          <br />% Change: &nbsp;\r\n                          {(item.changePercent * 100).toFixed(2)}%\r\n                          <br />\r\n                          High: ${item.high.toFixed(2)} <br /> Low: $\r\n                          {item.low.toFixed(2)}\r\n                          <br />\r\n                        </CardBody>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div key=\"back\">\r\n                      <div key={item.symbol}>\r\n                        <CardBody>\r\n                          <CardHeader>{item.companyName}</CardHeader>\r\n                          Volume:{\" \"}\r\n                          {new Intl.NumberFormat().format(item.latestVolume)}\r\n                          <br />\r\n                          Avg Vol:{\" \"}\r\n                          {new Intl.NumberFormat().format(item.avgTotalVolume)}\r\n                          <br />\r\n                          Market Cap:{\" \"}\r\n                          {new Intl.NumberFormat().format(item.marketCap)}\r\n                          <br />\r\n                          PE Ratio:{\" \"}\r\n                          {item.peRatio == null ? \"N/A\" : item.peRatio}\r\n                        </CardBody>\r\n                      </div>\r\n                    </div>\r\n                  </ReactCardFlip>\r\n                  <Button onClick={this.handleClick} className={styles.button}>\r\n                    More Info...\r\n                  </Button>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      if (!isLoaded) {\r\n        return (\r\n          <React.Fragment>\r\n            <form className=\"col text-center\">\r\n              <input\r\n                placeholder=\"Enter a stock symbol,\"\r\n                ref={input => (this.search = input)}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </form>\r\n            <div className=\"col text-center\">\r\n              e.g., Apple = aapl ; Tesla = tsla{\" \"}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./components/home\";\nimport About from \"./components/about\";\nimport News from \"./components/news\";\nimport Search from \"./components/search\";\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <NavBar />\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/News\" exact={true} component={News} />\n          <Route path=\"/About\" exact={true} component={About} />\n          <Route path=\"/Search\" exact={true} component={Search} />\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}