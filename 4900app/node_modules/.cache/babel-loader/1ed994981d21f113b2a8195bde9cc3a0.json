{"ast":null,"code":"var _jsxFileName = \"/Users/vic/Desktop/Git/Stock-App-Project/4900app/src/components/gainers.jsx\";\nimport React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport styles from \"../index.css\";\nimport { Card, CardBody, Button, CardHeader } from \"reactstrap\";\nconst BASEURL = \"https://cloud.iexapis.com/v1/stock/market/list/\";\nconst TYPE = \"gainers\";\nconst TOKEN = \"?token=pk_b24a0719ee7f4415b33737e51e8ef7f8\";\n\nclass Gainers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      isFlipped: false,\n      api: this.props.api,\n      update: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + this.props.api + TOKEN).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n  /* componentWillReceiveProps(props) {\n    const { api } = this.props;\n    if (props.api !== api) {\n      this.setState({ update: true });\n    }\n  } */\n\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped\n    }));\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"container\",\n        className: styles.container,\n        className: styles.card,\n        className: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, items.map(item => React.createElement(Card, {\n        body: true,\n        className: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ReactCardFlip, {\n        isFlipped: this.state.isFlipped,\n        flipDirection: \"vertical\",\n        flipSpeedBackToFront: 1,\n        flipSpeedFrontToBack: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: \"front\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: item.symbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, item.symbol), \"Latest Price: $\", item.latestPrice.toFixed(2), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \"Change: $\", item.change.toFixed(2), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), \"% Change: \\xA0\", (item.changePercent * 100).toFixed(2), \"%\"))), React.createElement(\"div\", {\n        key: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: item.symbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, item.companyName), \"High: $\", item.high.toFixed(2), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \" Low: $\", item.low.toFixed(2), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \"Volume:\", \" \", new Intl.NumberFormat().format(item.latestVolume), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"Avg Vol:\", \" \", new Intl.NumberFormat().format(item.avgTotalVolume), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"Market Cap:\", \" \", new Intl.NumberFormat().format(item.marketCap), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"PE Ratio:\", \" \", item.peRatio == null ? \"N/A\" : item.peRatio)))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        className: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"More Info...\"))), console.log(this.props.update), console.log(this.props.api))));\n    }\n  }\n\n}\n\nexport default Gainers;","map":{"version":3,"sources":["/Users/vic/Desktop/Git/Stock-App-Project/4900app/src/components/gainers.jsx"],"names":["React","Component","ReactCardFlip","styles","Card","CardBody","Button","CardHeader","BASEURL","TYPE","TOKEN","Gainers","constructor","props","state","items","isLoaded","isFlipped","api","update","handleClick","bind","componentDidMount","fetch","then","res","json","setState","event","preventDefault","prevState","render","container","card","root","map","item","symbol","latestPrice","toFixed","change","changePercent","companyName","high","low","Intl","NumberFormat","format","latestVolume","avgTotalVolume","marketCap","peRatio","button","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport styles from \"../index.css\";\n\nimport { Card, CardBody, Button, CardHeader } from \"reactstrap\";\n\nconst BASEURL = \"https://cloud.iexapis.com/v1/stock/market/list/\";\nconst TYPE = \"gainers\";\nconst TOKEN = \"?token=pk_b24a0719ee7f4415b33737e51e8ef7f8\";\n\nclass Gainers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      isFlipped: false,\n      api: this.props.api,\n      update: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + this.props.api + TOKEN)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  }\n\n  /* componentWillReceiveProps(props) {\n    const { api } = this.props;\n    if (props.api !== api) {\n      this.setState({ update: true });\n    }\n  } */\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n  }\n\n  render() {\n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <React.Fragment>\n          <main\n            className=\"container\"\n            className={styles.container}\n            className={styles.card}\n            className={styles.root}\n          >\n            <div>\n              {items.map(item => (\n                <Card body className={styles.card}>\n                  <ReactCardFlip\n                    isFlipped={this.state.isFlipped}\n                    flipDirection=\"vertical\"\n                    flipSpeedBackToFront={1}\n                    flipSpeedFrontToBack={1}\n                  >\n                    <div key=\"front\">\n                      <div key={item.symbol}>\n                        <CardBody>\n                          <CardHeader>{item.symbol}</CardHeader>\n                          Latest Price: ${item.latestPrice.toFixed(2)}\n                          <br />\n                          Change: ${item.change.toFixed(2)}\n                          <br />% Change: &nbsp;\n                          {(item.changePercent * 100).toFixed(2)}%\n                        </CardBody>\n                      </div>\n                    </div>\n\n                    <div key=\"back\">\n                      <div key={item.symbol}>\n                        <CardBody>\n                          <CardHeader>{item.companyName}</CardHeader>\n                          High: ${item.high.toFixed(2)} <br /> Low: $\n                          {item.low.toFixed(2)}\n                          <br />\n                          Volume:{\" \"}\n                          {new Intl.NumberFormat().format(item.latestVolume)}\n                          <br />\n                          Avg Vol:{\" \"}\n                          {new Intl.NumberFormat().format(item.avgTotalVolume)}\n                          <br />\n                          Market Cap:{\" \"}\n                          {new Intl.NumberFormat().format(item.marketCap)}\n                          <br />\n                          PE Ratio:{\" \"}\n                          {item.peRatio == null ? \"N/A\" : item.peRatio}\n                        </CardBody>\n                      </div>\n                    </div>\n                  </ReactCardFlip>\n                  <br />\n\n                  <Button onClick={this.handleClick} className={styles.button}>\n                    More Info...\n                  </Button>\n                </Card>\n              ))}\n              {console.log(this.props.update)}\n              {console.log(this.props.api)}\n            </div>\n          </main>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Gainers;\n"]},"metadata":{},"sourceType":"module"}